>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

    >>> bg = BaseGeometry()
    >>> type(bg)
    <class '7-base_geometry.BaseGeometry'>

    >>> bg.integer_validator("name", 5)

    >>> 'area' in dir(BaseGeometry)
    True

    >>> 'nteger_validator' in dir(BaseGeometry)
    False

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator(4)
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    ValueError: name must be greater than 0

    >>> bg.integer_validator(0, 1, 2, 3)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

    >>> bg.integer_validator("name", -36)
    Traceback (most recent call last):
    ValueError: name must be greater than 0

    >>> bg.integer_validator("name", 3)
